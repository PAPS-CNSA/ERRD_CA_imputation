liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
source("Fonctions.R")
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
source("Fonctions.R")
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
source("Fonctions.R")
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
class(table)
ls(table)
View(liste)
table_finess <- format_liste_a_vers_tablo(liste_finess)
View(table_finess)
ls(table_finess[["2017"]])
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
table <- table
liste_finess[[nom_table]] <- table
}
View(table)
table_finess <- format_liste_a_vers_tablo(liste_finess)
ls(table_finess[["2017"]])
ls(table_finess)
ls(liste_finess[["2017"]])
ls(liste[["2017"]])
ls(table)
ls(liste[["2022"]])
ls(liste[["2018"]])
ls(liste[["2019"]])
ls(liste[["2020"]])
ls(liste[["2021"]])
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
ls(table_finess)
# On renommme certaines variables
names(table)[names(table) == "ETP_AS_"] <- "ETP_AS"
names(table)[names(table) == "ETP_SG_"] <- "ETP_SG"
names(table)[names(table) == "SAL_AS_"] <- "SAL_AS"
names(table)[names(table) == "SAL_SG_"] <- "SAL_SG"
names(table)[names(table) == "ETP_AS__D"] <- "ETP_AS_D"
names(table)[names(table) == "ETP_SG__D"] <- "ETP_SG_D"
names(table)[names(table) == "SAL_AS__D"] <- "SAL_AS_D"
names(table)[names(table) == "SAL_SG__D"] <- "SAL_SG_D"
names(table)[names(table) == "ETP_AS__H"] <- "ETP_AS_H"
names(table)[names(table) == "ETP_SG__H"] <- "ETP_SG_H"
names(table)[names(table) == "SAL_AS__H"] <- "SAL_AS_H"
names(table)[names(table) == "SAL_SG__H"] <- "SAL_SG_H"
names(table)[names(table) == "ETP_AS__S"] <- "ETP_AS_S"
names(table)[names(table) == "ETP_SG__S"] <- "ETP_SG_S"
names(table)[names(table) == "SAL_AS__S"] <- "SAL_AS_S"
names(table)[names(table) == "SAL_SG__S"] <- "SAL_SG_S"
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
class(table_finess$ETP_ANIM_D)
table_num <- table %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
View(liste_finess)
View(table_finess)
ls(table_finess)
table_num <- table %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
class(table_finess$ETP_ANIM_D)
class(table_num$ETP_ANIM_D)
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
table_cptes <- table
View(table_cptes)
####################################################### Imputations des variables ETP et SAL ######################################################################
# I. Variables ETP et salaires
table_ETP <- table
# On supprime les valeurs sal_x > 0 quand sal_x < etp_x et on supprime les valeurs etp_x > 0 quand etp_x > sal_x
# On supprime aussi les valeurs négatives
exps_regs <- c("DIR", "SG", "ANIM", "ASH", "AS", "PSY", "INF", "AUX", "PHA", "MED")
nom_var_etp <- c("ETP_DIR", "ETP_SG", "ETP_ANIM", "ETP_ASH", "ETP_AS", "ETP_PSY", "ETP_INF", "ETP_AUX", "ETP_PHA", "ETP_MED")
nom_var_sal <- c("SAL_DIR", "SAL_SG", "SAL_ANIM", "SAL_ASH", "SAL_AS", "SAL_PSY", "SAL_INF", "SAL_AUX", "SAL_PHA", "SAL_MED")
for(etp in nom_var_etp){
for(sal in nom_var_sal){
for(exp_reg in exps_regs){
if(any(grepl(exp_reg, nom_var_etp) & grepl(exp_reg, nom_var_sal))){
table_ETP <- table_ETP %>% mutate(
!!etp := ifelse(!!sym(etp) > 0 & !!sym(etp) > !!sym(sal) | !!sym(etp) < 0, NA, !!sym(etp)),
!!sal := ifelse(!!sym(sal) > 0 & !!sym(etp) > !!sym(sal) | !!sym(sal) < 0, NA, !!sym(sal))
)
table_ETP <- table_ETP %>% mutate(!!etp := ifelse(!!sym(etp) == 0 & !!sym(sal) > 0, NA, !!sym(etp)),
!!sal := ifelse(!!sym(sal) == 0 & !!sym(etp) > 0, NA, !!sym(sal))
)
# Il ne doit pas y avoir de valeurs négatives pour les AS et les ASH
if(etp in c("AS", "ASH")){
####################################################### Imputations des variables ETP et SAL ######################################################################
# I. Variables ETP et salaires
table_ETP <- table
# On supprime les valeurs sal_x > 0 quand sal_x < etp_x et on supprime les valeurs etp_x > 0 quand etp_x > sal_x
# On supprime aussi les valeurs négatives
exps_regs <- c("DIR", "SG", "ANIM", "ASH", "AS", "PSY", "INF", "AUX", "PHA", "MED")
nom_var_etp <- c("ETP_DIR", "ETP_SG", "ETP_ANIM", "ETP_ASH", "ETP_AS", "ETP_PSY", "ETP_INF", "ETP_AUX", "ETP_PHA", "ETP_MED")
nom_var_sal <- c("SAL_DIR", "SAL_SG", "SAL_ANIM", "SAL_ASH", "SAL_AS", "SAL_PSY", "SAL_INF", "SAL_AUX", "SAL_PHA", "SAL_MED")
for(etp in nom_var_etp){
for(sal in nom_var_sal){
for(exp_reg in exps_regs){
if(any(grepl(exp_reg, nom_var_etp) & grepl(exp_reg, nom_var_sal))){
table_ETP <- table_ETP %>% mutate(
!!etp := ifelse(!!sym(etp) > 0 & !!sym(etp) > !!sym(sal) | !!sym(etp) < 0, NA, !!sym(etp)),
!!sal := ifelse(!!sym(sal) > 0 & !!sym(etp) > !!sym(sal) | !!sym(sal) < 0, NA, !!sym(sal))
)
table_ETP <- table_ETP %>% mutate(!!etp := ifelse(!!sym(etp) == 0 & !!sym(sal) > 0, NA, !!sym(etp)),
!!sal := ifelse(!!sym(sal) == 0 & !!sym(etp) > 0, NA, !!sym(sal))
)
# Il ne doit pas y avoir de valeurs négatives pour les AS et les ASH
if(etp in ("AS", "ASH")){
####################################################### Imputations des variables ETP et SAL ######################################################################
# I. Variables ETP et salaires
table_ETP <- table
# On supprime les valeurs sal_x > 0 quand sal_x < etp_x et on supprime les valeurs etp_x > 0 quand etp_x > sal_x
# On supprime aussi les valeurs négatives
exps_regs <- c("DIR", "SG", "ANIM", "ASH", "AS", "PSY", "INF", "AUX", "PHA", "MED")
nom_var_etp <- c("ETP_DIR", "ETP_SG", "ETP_ANIM", "ETP_ASH", "ETP_AS", "ETP_PSY", "ETP_INF", "ETP_AUX", "ETP_PHA", "ETP_MED")
nom_var_sal <- c("SAL_DIR", "SAL_SG", "SAL_ANIM", "SAL_ASH", "SAL_AS", "SAL_PSY", "SAL_INF", "SAL_AUX", "SAL_PHA", "SAL_MED")
for(etp in nom_var_etp){
for(sal in nom_var_sal){
for(exp_reg in exps_regs){
if(any(grepl(exp_reg, nom_var_etp) & grepl(exp_reg, nom_var_sal))){
table_ETP <- table_ETP %>% mutate(
!!etp := ifelse(!!sym(etp) > 0 & !!sym(etp) > !!sym(sal) | !!sym(etp) < 0, NA, !!sym(etp)),
!!sal := ifelse(!!sym(sal) > 0 & !!sym(etp) > !!sym(sal) | !!sym(sal) < 0, NA, !!sym(sal))
)
table_ETP <- table_ETP %>% mutate(!!etp := ifelse(!!sym(etp) == 0 & !!sym(sal) > 0, NA, !!sym(etp)),
!!sal := ifelse(!!sym(sal) == 0 & !!sym(etp) > 0, NA, !!sym(sal))
)
# Il ne doit pas y avoir de valeurs négatives pour les AS et les ASH
if(etp %in% c("AS", "ASH")){
table_ETP <- table_ETP %>% mutate(!!etp := ifelse(!!sym(etp) == 0, NA, !!sym(etp)))
}
}
}
}
}
ls(table_ETP)
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
####################################################### Imputations des variables ETP et SAL ######################################################################
# I. Variables ETP et salaires
table_ETP <- table_num
# On supprime les valeurs sal_x > 0 quand sal_x < etp_x et on supprime les valeurs etp_x > 0 quand etp_x > sal_x
# On supprime aussi les valeurs négatives
exps_regs <- c("DIR", "SG", "ANIM", "ASH", "AS", "PSY", "INF", "AUX", "PHA", "MED")
nom_var_etp <- c("ETP_DIR", "ETP_SG", "ETP_ANIM", "ETP_ASH", "ETP_AS", "ETP_PSY", "ETP_INF", "ETP_AUX", "ETP_PHA", "ETP_MED")
nom_var_sal <- c("SAL_DIR", "SAL_SG", "SAL_ANIM", "SAL_ASH", "SAL_AS", "SAL_PSY", "SAL_INF", "SAL_AUX", "SAL_PHA", "SAL_MED")
for(etp in nom_var_etp){
for(sal in nom_var_sal){
for(exp_reg in exps_regs){
if(any(grepl(exp_reg, nom_var_etp) & grepl(exp_reg, nom_var_sal))){
table_ETP <- table_ETP %>% mutate(
!!etp := ifelse(!!sym(etp) > 0 & !!sym(etp) > !!sym(sal) | !!sym(etp) < 0, NA, !!sym(etp)),
!!sal := ifelse(!!sym(sal) > 0 & !!sym(etp) > !!sym(sal) | !!sym(sal) < 0, NA, !!sym(sal))
)
table_ETP <- table_ETP %>% mutate(!!etp := ifelse(!!sym(etp) == 0 & !!sym(sal) > 0, NA, !!sym(etp)),
!!sal := ifelse(!!sym(sal) == 0 & !!sym(etp) > 0, NA, !!sym(sal))
)
# Il ne doit pas y avoir de valeurs négatives pour les AS et les ASH
if(etp %in% c("AS", "ASH")){
table_ETP <- table_ETP %>% mutate(!!etp := ifelse(!!sym(etp) == 0, NA, !!sym(etp)))
}
}
}
}
}
table_ETP <- enlever_valeurs_extremes_t(table_ETP, p_min = 0.00, p_max = 0.999)
source("Fonctions.R")
####################################################### Imputations des variables ETP et SAL ######################################################################
# I. Variables ETP et salaires
table_ETP <- table_num
# On supprime les valeurs sal_x > 0 quand sal_x < etp_x et on supprime les valeurs etp_x > 0 quand etp_x > sal_x
# On supprime aussi les valeurs négatives
exps_regs <- c("DIR", "SG", "ANIM", "ASH", "AS", "PSY", "INF", "AUX", "PHA", "MED")
nom_var_etp <- c("ETP_DIR", "ETP_SG", "ETP_ANIM", "ETP_ASH", "ETP_AS", "ETP_PSY", "ETP_INF", "ETP_AUX", "ETP_PHA", "ETP_MED")
nom_var_sal <- c("SAL_DIR", "SAL_SG", "SAL_ANIM", "SAL_ASH", "SAL_AS", "SAL_PSY", "SAL_INF", "SAL_AUX", "SAL_PHA", "SAL_MED")
for(etp in nom_var_etp){
for(sal in nom_var_sal){
for(exp_reg in exps_regs){
if(any(grepl(exp_reg, nom_var_etp) & grepl(exp_reg, nom_var_sal))){
table_ETP <- table_ETP %>% mutate(
!!etp := ifelse(!!sym(etp) > 0 & !!sym(etp) > !!sym(sal) | !!sym(etp) < 0, NA, !!sym(etp)),
!!sal := ifelse(!!sym(sal) > 0 & !!sym(etp) > !!sym(sal) | !!sym(sal) < 0, NA, !!sym(sal))
)
table_ETP <- table_ETP %>% mutate(!!etp := ifelse(!!sym(etp) == 0 & !!sym(sal) > 0, NA, !!sym(etp)),
!!sal := ifelse(!!sym(sal) == 0 & !!sym(etp) > 0, NA, !!sym(sal))
)
# Il ne doit pas y avoir de valeurs négatives pour les AS et les ASH
if(etp %in% c("AS", "ASH")){
table_ETP <- table_ETP %>% mutate(!!etp := ifelse(!!sym(etp) == 0, NA, !!sym(etp)))
}
}
}
}
}
table_ETP <- enlever_valeurs_extremes_t(table_ETP, p_min = 0.00, p_max = 0.999)
unique(table_ETP$categetab)
categ_Yamile <- table_ETP %>% filter(categetab %in% c(189, 190))
## SG :  il n'y a plus que 3099 observations non vides pour les ETP et 2699 pour les salaires. Le total des ETP diminuent à partir de 2020. Les salaires augmentent significativement en 2018, +23,9 %.
test_SG <- categ_Yamile  %>% select(FINESSET_ID_CR_SF, ANNEE, ETP_SG, SAL_SG)
## SG :  il n'y a plus que 3099 observations non vides pour les ETP et 2699 pour les salaires. Le total des ETP diminuent à partir de 2020. Les salaires augmentent significativement en 2018, +23,9 %.
test_SG <- categ_Yamile  %>% select(FINESS, ANNEE, ETP_SG, SAL_SG)
test_SG <- test_SG %>% group_by(ANNEE) %>% mutate(sum_ETP_SG = sum(as.numeric(ETP_SG), na.rm = T)
, sum_SAL_SG = sum(as.numeric(SAL_SG), na.rm = T)
)
test_SG_sum <- test_SG %>% select(ANNEE, sum_ETP_SG, sum_SAL_SG) %>% group_by(ANNEE) %>% unique()
View(test_SG_sum)
## DIR : il n'y a plus que 3138 observations non vides pour les ETP et 2704 pour les salaires. Le total des ETP diminuent à partir de 2020. Les salaires augmentent significativement en 2018, +21,6 %.
test_DIR <- categ_Yamile  %>% select(FINESS, ANNEE, ETP_DIR, SAL_DIR)
test_DIR <- test_DIR %>% group_by(ANNEE) %>% mutate(sum_ETP_DIR = sum(as.numeric(ETP_DIR), na.rm = T)
, sum_SAL_DIR = sum(as.numeric(SAL_DIR), na.rm = T)
)
test_DIR_sum <- test_DIR %>% select(ANNEE, sum_ETP_DIR, sum_SAL_DIR) %>% group_by(ANNEE) %>% unique()
View(test_DIR_sum)
## ASH : il n'y a plus que 3051 observations non vides pour les ETP et 2665 pour les salaires. Le total des ETP diminuent en 2022. Les salaires augmentent significativement en 2018, +17,9 %.
test_ASH <- categ_Yamile  %>% select(FINESS, ANNEE, ETP_ASH, SAL_ASH)
test_ASH <- test_ASH %>% group_by(ANNEE) %>% mutate(sum_ETP_ASH = sum(as.numeric(ETP_ASH), na.rm = T)
, sum_SAL_ASH = sum(as.numeric(SAL_ASH), na.rm = T)
)
test_ASH_sum <- test_ASH %>% select(ANNEE, sum_ETP_ASH, sum_SAL_ASH) %>% group_by(ANNEE) %>% unique()
View(test_ASH_sum)
## AS : il n'y a plus que 3040 observations non vides pour les ETP et 2662 pour les salaires. Le total des ETP diminuent en 2022. Les salaires augmentent significativement en 2018, +24,6 %.
test_AS <- categ_Yamile  %>% select(FINESS, ANNEE, ETP_AS, SAL_AS)
test_AS <- test_AS %>% group_by(ANNEE) %>% mutate(sum_ETP_AS = sum(as.numeric(ETP_AS), na.rm = T)
, sum_SAL_AS = sum(as.numeric(SAL_AS), na.rm = T)
)
test_AS_sum <- test_AS %>% select(ANNEE, sum_ETP_AS, sum_SAL_AS) %>% group_by(ANNEE) %>% unique()
View(test_AS_sum)
## INF : il n'y a plus que 2973 observations non vides pour les ETP et 2647 pour les salaires. On observe une nette augmentation du total des ETP en 2018, +24,5 %. Les salaires augmentent significativement en 2018, +20,8 %.
test_INF <- categ_Yamile  %>% select(FINESS, ANNEE, ETP_INF, SAL_INF)
test_INF <- test_INF %>% group_by(ANNEE) %>% mutate(sum_ETP_INF = sum(as.numeric(ETP_INF), na.rm = T)
, sum_SAL_INF = sum(as.numeric(SAL_INF), na.rm = T)
)
test_INF_sum <- test_INF %>% select(ANNEE, sum_ETP_INF, sum_SAL_INF) %>% group_by(ANNEE) %>% unique()
View(test_INF_sum)
View(test_INF)
## PSY : il n'y a plus que 2992 observations non vides pour les ETP et 2654 pour les salaires.
test_PSY <- categ_Yamile  %>% select(FINESS, ANNEE, ETP_PSY, SAL_PSY)
test_PSY <- test_PSY %>% group_by(ANNEE) %>% mutate(sum_ETP_PSY = sum(as.numeric(ETP_PSY), na.rm = T)
, sum_SAL_PSY = sum(as.numeric(SAL_PSY), na.rm = T)
)
test_PSY_sum <- test_PSY %>% select(ANNEE, sum_ETP_PSY, sum_SAL_PSY) %>% group_by(ANNEE) %>% unique()
View(test_PSY_sum)
View(test_PSY)
View(categ_Yamile)
View(table_ETP)
ls(table_ETP)
View(table_num)
ls(table_num)
table_ETP <- table_num
View(table_ETP)
table_ETP <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("ETP"), matches("SAL"))
table_ETP <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("ETP"), matches("SAL")) %>% filter(categetab != 500)
categ_89_90 <- table_ETP %>% filter(categetab %>% in c(189, 190))
categ_89_90 <- table_ETP %>% filter(categetab %in% c(189, 190))
View(categ_89_90)
ls(categ_89_90)
categ_89_90_EDU <- categ_89_90 %>% select(FINESS, ANNEE, categetab, ETP_EDU)
View(categ_89_90_EDU)
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
ls(table_num)
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
View(table_cptes)
ls(table_cptes)
View(table_cptes)
010004059 <- table_cptes %>% filter(FINESS == "010004059") %>% select(FINESS, ANNEE, categetab, Financeur_Etat_TOT, TOT__REC_GI_TARIF)
010004059 <- table_cptes %>% filter(FINESS = "010004059") %>% select(FINESS, ANNEE, categetab, Financeur_Etat_TOT, TOT__REC_GI_TARIF)
FIN_010004059 <- table_cptes %>% filter(FINESS == "010004059") %>% select(FINESS, ANNEE, categetab, Financeur_Etat_TOT, TOT__REC_GI_TARIF)
View(FIN_010004059)
FIN_010004059 <- table_cptes %>% filter(FINESS == "010004059") %>% select(FINESS, ANNEE, categetab, Financeur_Etat_TOT, Financeur_Ass_Maladie_TOT, Financeur_Departement_TOT, Financeur_autre_TOT, Financeur_Usager_TOT, TOT__REC_GI_TARIF)
errd_ajout_variables_syntheses
library(cnsa.caerrd)
errd_ajout_variables_syntheses
errd_creation_synthese_annee
ls(table_cptes)
sum(is.na(table_cptes$TOT_PRODUITS_REALISE))
table_cptes_500 <- table_cptes %>% filter(categetab == 500)
sum(is.na(table_cptes_500$TOT_PRODUITS_REALISE))
sum(is.na(table_cptes_500$TOT_REC_REA_DEP))
sum(is.na(table_cptes_500$TOT_REC_REA_HEB))
sum(is.na(table_cptes_500$TOT_REC_REA_SOI))
sum(is.na(table_cptes_500$TOT_CHARGES_REALISE))
sum(table_cptes_500$TOT_PRODUITS_REALISE == 0)
sum(table_cptes_500$TOT_PRODUITS_REALISE = 0)
sum(ifelse(table_cptes_500$TOT_PRODUITS_REALISE == 0))
View(table_cptes_500)
sum(table_cptes_500$TOT_PRODUITS_REALISE = 0, na.rm = T)
sum(table_cptes_500$TOT_PRODUITS_REALISE == 0, na.rm = T)
sum(table_cptes_500$TOT_REC_REA_SOI == 0, na.rm = T)
sum(table_cptes_500$TOT_REC_REA_SDEP == 0, na.rm = T)
sum(table_cptes_500$TOT_REC_REA_DEP == 0, na.rm = T)
sum(table_cptes_500$TOT_REC_REA_HEB == 0, na.rm = T)
table_cptes_500_prive <- table_cptes_500 %>% filter(statut == "PriveLucratif")
View(table_cptes_500_prive)
table_cptes_500_prive <- table_cptes_500_prive %>% select(FINESS, ANNEE, TOT_PRODUITS_REALISE, TOT_CHARGES_REALISE, TOT_REC_REA_SOI, TOT_REC_REA_DEP, TOT_REC_REA_HEB, TOT_DEP_REA_SOI, TOT_DEP_REA_DEP, TOT_DEP_REA_HEB)
table_cptes_500_prive <- table_cptes_500_prive %>% mutate(TOT_REC = TOT_REC_REA_SOI + TOT_REC_REA_DEP + TOT_REC_REA_HEB,)
table_cptes_500_prive <- table_cptes_500_prive %>% mutate(TOT_REC = TOT_REC_REA_SOI + TOT_REC_REA_DEP + TOT_REC_REA_HEB, TOT_DEP = TOT_DEP_REA_SOI + TOT_DEP_REA_DEP + TOT_DEP_REA_HEB)
table_cptes_500_prive_sel <- table_cptes_500_prive %>% select(FINESS, ANNEE, TOT_PRODUITS_REALISE, TOT_CHARGES_REALISE, TOT_REC, TOT_DEP, TOT_REC_REA_HEB, TOT_DEP_REA_HEB)
View(table_cptes_500_prive_sel)
TOT_cols <- grep("TOT", names(table_cptes_500_prive_sel), value = TRUE)
table_cptes_500_prive_sel$Sum_TOT <- rowSums(table_cptes_500_prive_sel[, TOT_cols])
table_cptes_500_prive_sel <- table_cptes_500_prive_sel %>% select(-Sum_TOT)
table_cptes_500_prive_sel  <- table_cptes_500_prive_sel %>% mutate(across(all_of(TOT_cols), list(Sum_TOT = ~ sum(.))))
table_cptes_500_prive_sel  <- table_cptes_500_prive_sel %>% mutate(across(all_of(TOT_cols), list(Sum_TOT = ~ sum(., na.rm = T))))
table_cptes_500_prive_sel  <- table_cptes_500_prive_sel %>% filter(TOT_DEP_REA_HEB > 0)
table_cptes_500_prive_sel <- table_cptes_500_prive %>% select(FINESS, ANNEE, TOT_PRODUITS_REALISE, TOT_CHARGES_REALISE, TOT_REC, TOT_DEP, TOT_REC_REA_HEB, TOT_DEP_REA_HEB)
table_cptes_500_prive_sel$Sum_TOT <- rowSums(table_cptes_500_prive_sel[, TOT_cols])
table_cptes_500_prive_sel <- table_cptes_500_prive_sel %>% select(-Sum_TOT)
table_cptes_500_prive_sel  <- table_cptes_500_prive_sel %>% mutate(across(all_of(TOT_cols), list(Sum_TOT = ~ sum(., na.rm = T))))
table_cptes_500_prive_sel_heb_pos  <- table_cptes_500_prive_sel %>% filter(TOT_DEP_REA_HEB > 0)
View(table_cptes_500_prive_sel_heb_pos)
table_cptes_500_prive_sel_heb_pos <- table_cptes_500_prive_sel_heb_pos %>% group_by(FINESS) %>% mutate(n_finess = n())
hist(table_cptes_500_prive_sel_heb_pos$n_finess)
sum(table_cptes_500_prive_sel_heb_pos$n_finess)
count(table_cptes_500_prive_sel_heb_pos$n_finess == 6)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 6)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 5)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 4)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 3)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 2)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 1)
144+85+68+42+76+94
144/509
94/509
28+18
View(table_cptes_500)
ls(table_cptes)

View(test_INF)
## PSY : il n'y a plus que 2992 observations non vides pour les ETP et 2654 pour les salaires.
test_PSY <- categ_Yamile  %>% select(FINESS, ANNEE, ETP_PSY, SAL_PSY)
test_PSY <- test_PSY %>% group_by(ANNEE) %>% mutate(sum_ETP_PSY = sum(as.numeric(ETP_PSY), na.rm = T)
, sum_SAL_PSY = sum(as.numeric(SAL_PSY), na.rm = T)
)
test_PSY_sum <- test_PSY %>% select(ANNEE, sum_ETP_PSY, sum_SAL_PSY) %>% group_by(ANNEE) %>% unique()
View(test_PSY_sum)
View(test_PSY)
View(categ_Yamile)
View(table_ETP)
ls(table_ETP)
View(table_num)
ls(table_num)
table_ETP <- table_num
View(table_ETP)
table_ETP <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("ETP"), matches("SAL"))
table_ETP <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("ETP"), matches("SAL")) %>% filter(categetab != 500)
categ_89_90 <- table_ETP %>% filter(categetab %>% in c(189, 190))
categ_89_90 <- table_ETP %>% filter(categetab %in% c(189, 190))
View(categ_89_90)
ls(categ_89_90)
categ_89_90_EDU <- categ_89_90 %>% select(FINESS, ANNEE, categetab, ETP_EDU)
View(categ_89_90_EDU)
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
ls(table_num)
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
View(table_cptes)
ls(table_cptes)
View(table_cptes)
010004059 <- table_cptes %>% filter(FINESS == "010004059") %>% select(FINESS, ANNEE, categetab, Financeur_Etat_TOT, TOT__REC_GI_TARIF)
010004059 <- table_cptes %>% filter(FINESS = "010004059") %>% select(FINESS, ANNEE, categetab, Financeur_Etat_TOT, TOT__REC_GI_TARIF)
FIN_010004059 <- table_cptes %>% filter(FINESS == "010004059") %>% select(FINESS, ANNEE, categetab, Financeur_Etat_TOT, TOT__REC_GI_TARIF)
View(FIN_010004059)
FIN_010004059 <- table_cptes %>% filter(FINESS == "010004059") %>% select(FINESS, ANNEE, categetab, Financeur_Etat_TOT, Financeur_Ass_Maladie_TOT, Financeur_Departement_TOT, Financeur_autre_TOT, Financeur_Usager_TOT, TOT__REC_GI_TARIF)
errd_ajout_variables_syntheses
library(cnsa.caerrd)
errd_ajout_variables_syntheses
errd_creation_synthese_annee
ls(table_cptes)
sum(is.na(table_cptes$TOT_PRODUITS_REALISE))
table_cptes_500 <- table_cptes %>% filter(categetab == 500)
sum(is.na(table_cptes_500$TOT_PRODUITS_REALISE))
sum(is.na(table_cptes_500$TOT_REC_REA_DEP))
sum(is.na(table_cptes_500$TOT_REC_REA_HEB))
sum(is.na(table_cptes_500$TOT_REC_REA_SOI))
sum(is.na(table_cptes_500$TOT_CHARGES_REALISE))
sum(table_cptes_500$TOT_PRODUITS_REALISE == 0)
sum(table_cptes_500$TOT_PRODUITS_REALISE = 0)
sum(ifelse(table_cptes_500$TOT_PRODUITS_REALISE == 0))
View(table_cptes_500)
sum(table_cptes_500$TOT_PRODUITS_REALISE = 0, na.rm = T)
sum(table_cptes_500$TOT_PRODUITS_REALISE == 0, na.rm = T)
sum(table_cptes_500$TOT_REC_REA_SOI == 0, na.rm = T)
sum(table_cptes_500$TOT_REC_REA_SDEP == 0, na.rm = T)
sum(table_cptes_500$TOT_REC_REA_DEP == 0, na.rm = T)
sum(table_cptes_500$TOT_REC_REA_HEB == 0, na.rm = T)
table_cptes_500_prive <- table_cptes_500 %>% filter(statut == "PriveLucratif")
View(table_cptes_500_prive)
table_cptes_500_prive <- table_cptes_500_prive %>% select(FINESS, ANNEE, TOT_PRODUITS_REALISE, TOT_CHARGES_REALISE, TOT_REC_REA_SOI, TOT_REC_REA_DEP, TOT_REC_REA_HEB, TOT_DEP_REA_SOI, TOT_DEP_REA_DEP, TOT_DEP_REA_HEB)
table_cptes_500_prive <- table_cptes_500_prive %>% mutate(TOT_REC = TOT_REC_REA_SOI + TOT_REC_REA_DEP + TOT_REC_REA_HEB,)
table_cptes_500_prive <- table_cptes_500_prive %>% mutate(TOT_REC = TOT_REC_REA_SOI + TOT_REC_REA_DEP + TOT_REC_REA_HEB, TOT_DEP = TOT_DEP_REA_SOI + TOT_DEP_REA_DEP + TOT_DEP_REA_HEB)
table_cptes_500_prive_sel <- table_cptes_500_prive %>% select(FINESS, ANNEE, TOT_PRODUITS_REALISE, TOT_CHARGES_REALISE, TOT_REC, TOT_DEP, TOT_REC_REA_HEB, TOT_DEP_REA_HEB)
View(table_cptes_500_prive_sel)
TOT_cols <- grep("TOT", names(table_cptes_500_prive_sel), value = TRUE)
table_cptes_500_prive_sel$Sum_TOT <- rowSums(table_cptes_500_prive_sel[, TOT_cols])
table_cptes_500_prive_sel <- table_cptes_500_prive_sel %>% select(-Sum_TOT)
table_cptes_500_prive_sel  <- table_cptes_500_prive_sel %>% mutate(across(all_of(TOT_cols), list(Sum_TOT = ~ sum(.))))
table_cptes_500_prive_sel  <- table_cptes_500_prive_sel %>% mutate(across(all_of(TOT_cols), list(Sum_TOT = ~ sum(., na.rm = T))))
table_cptes_500_prive_sel  <- table_cptes_500_prive_sel %>% filter(TOT_DEP_REA_HEB > 0)
table_cptes_500_prive_sel <- table_cptes_500_prive %>% select(FINESS, ANNEE, TOT_PRODUITS_REALISE, TOT_CHARGES_REALISE, TOT_REC, TOT_DEP, TOT_REC_REA_HEB, TOT_DEP_REA_HEB)
table_cptes_500_prive_sel$Sum_TOT <- rowSums(table_cptes_500_prive_sel[, TOT_cols])
table_cptes_500_prive_sel <- table_cptes_500_prive_sel %>% select(-Sum_TOT)
table_cptes_500_prive_sel  <- table_cptes_500_prive_sel %>% mutate(across(all_of(TOT_cols), list(Sum_TOT = ~ sum(., na.rm = T))))
table_cptes_500_prive_sel_heb_pos  <- table_cptes_500_prive_sel %>% filter(TOT_DEP_REA_HEB > 0)
View(table_cptes_500_prive_sel_heb_pos)
table_cptes_500_prive_sel_heb_pos <- table_cptes_500_prive_sel_heb_pos %>% group_by(FINESS) %>% mutate(n_finess = n())
hist(table_cptes_500_prive_sel_heb_pos$n_finess)
sum(table_cptes_500_prive_sel_heb_pos$n_finess)
count(table_cptes_500_prive_sel_heb_pos$n_finess == 6)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 6)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 5)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 4)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 3)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 2)
sum(table_cptes_500_prive_sel_heb_pos$n_finess == 1)
144+85+68+42+76+94
144/509
94/509
28+18
View(table_cptes_500)
ls(table_cptes)
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
ls(table_num)
library(cnsa.caerrd)
ca_creation_synthese_annee
errd_chargement_une_annee
errd_ajout_variables_syntheses
errd_chargement_une_annee
caerrd_ajout_variables_syntheses_financieres
errd_ajout_variables_syntheses
errd_ajout_variables_syntheses
errd_creation_synthese_annee
errd_creation_synthese_annee
View(table)
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
ls(table_cptes )
table_cptes <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
View(table_cptes)
View(table_cptes_na)
is.na(table_cptes_na$Financeur_Etat_TOT)
sum(is.na(table_cptes_na$Financeur_Etat_TOT))
sum(is.na(table_cptes$Financeur_Etat_TOT))
unique(table_cptes_na$statut)
class(table_cptes$ANNEE)
table_cptes_na <- table_cptes_na %>% filter(as.numeric(ANNEE) < 2022 & categetab == 50 & statut != "PriveLucratif")
View(table_cptes_na)
View(table_cptes_na)
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(annee) < 2023 & statut == "PriveLucratif"))
View(table_cptes_na)
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(as.numeric(annee) < 2023 & statut == "PriveLucratif"))
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(as.numeric(annee) < 2023 & statut == "PriveLucratif")
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(annee) < 2023 & statut == "PriveLucratif"))
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(as.numeric(annee) < 2023 & statut == "PriveLucratif")
View(table_cptes_na)
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(annee) < 2022 & statut == "PriveLucratif"))
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(as.numeric(annee) < 2022 & statut == "PriveLucratif")
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(as.numeric(annee) < 2023 & statut == "PriveLucratif")
class(table_cptes_na$ANNEE)
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(as.numeric(annee) < 2022 & statut == "PriveLucratif")
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(as.numeric(ANNEE) < 2022 & statut == "PriveLucratif")
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(as.numeric(ANNEE) <= 2022 & statut == "PriveLucratif")
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(ANNEE) <= 2022 & statut == "PriveLucratif"))
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
names(table_finess)[names(table_finess) == "TOT_REC_GRI_TARIF"] <- "TOT_REC_GRI"
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
names(table_finess)[names(table_finess) == "TOT_REC_GRI_TARIF"] <- "TOT_REC_GRI"
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
ls(table_num)
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(ANNEE) <= 2022 & statut == "PriveLucratif"))
table_cptes_na <- table_cptes_na %>% mutate_at(matches("Financeur"), ~ifelse(is.na(table_cptes_na$TOT_REC_GRI), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur")), ~ifelse(is.na(table_cptes_na$TOT_REC_GRI), NA, .))
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(ANNEE) <= 2022 & statut == "PriveLucratif"))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("TOT")), ~ifelse(is.na(table_cptes_na$TOT_REC_GRI), NA, .))
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(ANNEE) <= 2022 & statut == "PriveLucratif"))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("TOT")), ~ifelse(is.na(table_cptes_na$TOT_REC_GRI), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("soins")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_SOI_TARIF), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("dep")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_DEP_TARIF), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("heb")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_HEB_TARIF), NA, .))
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
# Il n'y a pas de variables négatives (hors variables FINESS, ANNEE, categetab et statut)
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
# On enlève les Ehpad du privé lucratif avant 2023 (car ils sont trop peu nombreux à avoir renseigné les produits/charges de la section hébergement)
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(ANNEE) <= 2022 & statut == "PriveLucratif"))
# La variable TOT_REC_GRI ne peut pas être nulle, autrement elle devient NA
table_cptes_na <- table_cptes_na %>% mutate(TOT_REC_GRI = ifelse(TOT_REC_GRI == 0, NA, TOT_REC_GRI))
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
# Il n'y a pas de variables négatives (hors variables FINESS, ANNEE, categetab et statut)
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
# On enlève les Ehpad du privé lucratif avant 2023 (car ils sont trop peu nombreux à avoir renseigné les produits/charges de la section hébergement)
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(ANNEE) <= 2022 & statut == "PriveLucratif"))
# La variable TOT_REC_GRI ne peut pas être nulle, autrement elle devient NA, même chose pour les variables TOT_REC_REA_x_TARIF
table_cptes_na <- table_cptes_na %>% mutate(TOT_REC_GRI = ifelse(TOT_REC_GRI == 0, NA, TOT_REC_GRI))
sec_tar <- c("SOI", "DEP", "HEB")
for(sec in sec_tar){
name_col <- paste0("TOT_REC_REA_", sec, "_TARIF")
table_cptes_na <- table_cptes_na %>% mutate(!!name_col := ifelse(!!sym(name_col) == 0, NA, !!sym(name_col)))
}
sum(is.na(table_cptes_na$TOT_REC_GRII))
table_cptes_na <- table_cptes_na %>% mutate(TOT_REC_GRII = ifelse(TOT_REC_GRII == 0, NA, TOT_REC_GRII))
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
# Il n'y a pas de variables négatives (hors variables FINESS, ANNEE, categetab et statut)
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
# On enlève les Ehpad du privé lucratif avant 2023 (car ils sont trop peu nombreux à avoir renseigné les produits/charges de la section hébergement)
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(ANNEE) <= 2022 & statut == "PriveLucratif"))
# La variable TOT_REC_GRI ne peut pas être nulle, autrement elle devient NA, même chose pour les variables TOT_REC_REA_x_TARIF
table_cptes_na <- table_cptes_na %>% mutate(TOT_REC_GRI = ifelse(TOT_REC_GRI == 0, NA, TOT_REC_GRI))
sec_tar <- c("SOI", "DEP", "HEB")
for(sec in sec_tar){
name_col <- paste0("TOT_REC_REA_", sec, "_TARIF")
table_cptes_na <- table_cptes_na %>% mutate(!!name_col := ifelse(!!sym(name_col) == 0, NA, !!sym(name_col)))
}
# Les variables "Financeur_x" doivent être vides si la variable groupe I/TOT_REC_REA_x_TARIF est vide
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("TOT")), ~ifelse(is.na(table_cptes_na$TOT_REC_GRI), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("soins")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_SOI_TARIF), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("dep")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_DEP_TARIF), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("heb")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_HEB_TARIF), NA, .))
sum(is.na(table_cptes_na$TOT_REC_GRII))
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
# Il n'y a pas de variables négatives (hors variables FINESS, ANNEE, categetab et statut)
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
# On enlève les Ehpad du privé lucratif avant 2023 (car ils sont trop peu nombreux à avoir renseigné les produits/charges de la section hébergement)
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(ANNEE) <= 2022 & statut == "PriveLucratif"))
# La variable TOT_REC_GRI ne peut pas être nulle, autrement elle devient NA, même chose pour les variables TOT_REC_REA_x_TARIF
table_cptes_na <- table_cptes_na %>% mutate(TOT_REC_GRI = ifelse(TOT_REC_GRI == 0, NA, TOT_REC_GRI))
sec_tar <- c("SOI", "DEP", "HEB")
for(sec in sec_tar){
name_col <- paste0("TOT_REC_REA_", sec, "_TARIF")
table_cptes_na <- table_cptes_na %>% mutate(!!name_col := ifelse(!!sym(name_col) == 0, NA, !!sym(name_col)))
}
# Les variables "Financeur_x" doivent être vides si la variable groupe I/TOT_REC_REA_x_TARIF est vide
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("TOT")), ~ifelse(is.na(table_cptes_na$TOT_REC_GRI), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("soins")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_SOI_TARIF), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("dep")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_DEP_TARIF), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("heb")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_HEB_TARIF), NA, .))
ls(table_cptes_na)
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
names(table_finess)[names(table_finess) == "TOT_REC_GRI_TARIF"] <- "TOT_REC_GRI"
names(table_finess)[names(table_finess) == "TOT_REC_GRII_AUTRE"] <- "TOT_REC_GRII"
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
rm = list(ls())
# Lancement
library(dplyr)
library(tidyr)
library(cnsa)
library(data.table)
source("Fonctions.R")
# Chargement et préparation de la table
liste <- readRDS("G:/08. DPE/11. STATISTIQUES/12. Bases de Données/05. CA&ERRD/Donnees/brut_synthese/CAERRD_LISTE_A.rds")
annees <- as.character(2017:2022)
liste_finess <- list()
for(annee in annees){
nom_table <- names(liste[annee])
table <- liste[[annee]]
table <- chargement_annee(table, annee)
if(annee != "2022")
table <- table %>% select(-"ETP_SG")
liste_finess[[nom_table]] <- table
}
table_finess <- format_liste_a_vers_tablo(liste_finess)
# On renommme certaines variables
names(table_finess)[names(table_finess) == "ETP_AS_"] <- "ETP_AS"
names(table_finess)[names(table_finess) == "ETP_SG_"] <- "ETP_SG"
names(table_finess)[names(table_finess) == "SAL_AS_"] <- "SAL_AS"
names(table_finess)[names(table_finess) == "SAL_SG_"] <- "SAL_SG"
names(table_finess)[names(table_finess) == "ETP_AS__D"] <- "ETP_AS_D"
names(table_finess)[names(table_finess) == "ETP_SG__D"] <- "ETP_SG_D"
names(table_finess)[names(table_finess) == "SAL_AS__D"] <- "SAL_AS_D"
names(table_finess)[names(table_finess) == "SAL_SG__D"] <- "SAL_SG_D"
names(table_finess)[names(table_finess) == "ETP_AS__H"] <- "ETP_AS_H"
names(table_finess)[names(table_finess) == "ETP_SG__H"] <- "ETP_SG_H"
names(table_finess)[names(table_finess) == "SAL_AS__H"] <- "SAL_AS_H"
names(table_finess)[names(table_finess) == "SAL_SG__H"] <- "SAL_SG_H"
names(table_finess)[names(table_finess) == "ETP_AS__S"] <- "ETP_AS_S"
names(table_finess)[names(table_finess) == "ETP_SG__S"] <- "ETP_SG_S"
names(table_finess)[names(table_finess) == "SAL_AS__S"] <- "SAL_AS_S"
names(table_finess)[names(table_finess) == "SAL_SG__S"] <- "SAL_SG_S"
names(table_finess)[names(table_finess) == "TOT_REC_GRI_TARIF"] <- "TOT_REC_GRI"
names(table_finess)[names(table_finess) == "TOT_REC_GRII_AUTRE"] <- "TOT_REC_GRII"
table_num <- table_finess %>% mutate_at(vars(-"FINESS", -"ANNEE", -"departement", -"statut"), as.numeric)
table_cptes <- table_num %>% select(FINESS, ANNEE, categetab, statut, matches("Financeur"), matches("TOT"), matches("COMPTE"))
# Il n'y a pas de variables négatives (hors variables FINESS, ANNEE, categetab et statut)
table_cptes_na <- table_cptes %>% mutate_at(vars(-FINESS, -ANNEE, -categetab, -statut), ~ifelse(. < 0, NA, .))
# On enlève les Ehpad du privé lucratif avant 2023 (car ils sont trop peu nombreux à avoir renseigné les produits/charges de la section hébergement)
table_cptes_na <- table_cptes_na %>% filter(!(as.numeric(ANNEE) <= 2022 & statut == "PriveLucratif"))
# La variable TOT_REC_GRI ne peut pas être nulle, autrement elle devient NA, même chose pour les variables TOT_REC_REA_x_TARIF
table_cptes_na <- table_cptes_na %>% mutate(TOT_REC_GRI = ifelse(TOT_REC_GRI == 0, NA, TOT_REC_GRI))
sec_tar <- c("SOI", "DEP", "HEB")
for(sec in sec_tar){
name_col <- paste0("TOT_REC_REA_", sec, "_TARIF")
table_cptes_na <- table_cptes_na %>% mutate(!!name_col := ifelse(!!sym(name_col) == 0, NA, !!sym(name_col)))
}
# Les variables "Financeur_x" doivent être vides si la variable groupe I/TOT_REC_REA_x_TARIF est vide
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("TOT")), ~ifelse(is.na(table_cptes_na$TOT_REC_GRI), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("soins")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_SOI_TARIF), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("dep")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_DEP_TARIF), NA, .))
table_cptes_na <- table_cptes_na %>% mutate_at(vars(matches("Financeur") & matches("heb")), ~ifelse(is.na(table_cptes_na$TOT_REC_REA_HEB_TARIF), NA, .))
sum(is.na(table_cptes_na $TOT_REC_GRII))
table_cptes_na <- table_cptes_na %>% mutate(TOT_REC_GRII = ifelse(TOT_REC_GRII == 0, NA, TOT_REC_GRII))
table_cptes_na <- table_cptes_na %>% mutate(TOT_REC_GRII = ifelse(TOT_REC_GRII == 0, NA, TOT_REC_GRII))
sum(is.na(table_cptes_na $TOT_REC_GRII))
